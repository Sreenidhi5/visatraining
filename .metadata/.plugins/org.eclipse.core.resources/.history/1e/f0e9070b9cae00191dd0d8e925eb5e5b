package com.visa.training.bootproject.testclient;

import java.net.URI;
import java.util.List;
import java.util.Scanner;

import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

import com.visa.training.bootproject.domain.Product;



public class ProductRemoteClientApp {

    public static void main(String[] args) {
        createProductWithUI();
        System.out.println("All Products : ");
        listProducts();
    }
    
    private static void listProducts() {
        RestTemplate template = new RestTemplate();
        ResponseEntity<List<Product>> response = template.exchange("http://localhost:8080/api/products", 
                HttpMethod.GET, null    , new ParameterizedTypeReference<List<Product>>(){});
        
        List<Product> list = response.getBody();
        list.forEach(System.out::println);
    }

    public static void createProductWithUI() {
        Scanner kb = new Scanner(System.in);
        System.out.println("Enter a name: ");
        String name = kb.nextLine();
        System.out.println("Enter a price : ");
        float price = Float.parseFloat(kb.nextLine());
        System.out.println("Enter a qoh : ");
        int qoh = Integer.parseInt(kb.nextLine());
        
        Product p = new Product(name, price, qoh);
        try {
            RestTemplate template = new RestTemplate();
            URI uri = template.postForLocation("http://localhost:8080/api/products", p);
            System.out.println("Created product with uri : "+uri.toString());
        } catch (Exception e) {
            //System.out.println("Value too low for creation");
            e.printStackTrace();
        }
        

    }

}


<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>



package com.visa.training.bootproject.testclient;

import org.springframework.web.reactive.function.client.WebClient;

import com.visa.training.bootproject.domain.Product;

import reactor.core.publisher.Flux;



public class ProductRemoteClientWithWebFlux {

    public static void main(String[] args) throws InterruptedException {
        //createProductWithUI();
        long start = System.currentTimeMillis();
        System.out.println("All Products : ");
        listProducts();
        long stop = System.currentTimeMillis();
        System.out.println("listing took "+(stop - start)+" ms");
        doSomeOtherWork();
        
        
        Thread.sleep(3000);
        
    }
    
    private static void doSomeOtherWork() {
        System.out.println("Doing Some other work.................");
        
    }

    private static void listProducts() {
        WebClient client = WebClient.create("http://localhost:8080");
        Flux<Product> all = client.get().uri("/api/products").retrieve().bodyToFlux(Product.class);
        all.subscribe(System.out::println);
    }

    

}
